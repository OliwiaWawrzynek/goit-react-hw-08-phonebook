{"version":3,"file":"static/js/194.1529444f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactListElement/ContactListElement.module.css?1371","components/ContactListElement/ContactListElement.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/tasks/selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/contactsPage.jsx","../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../node_modules/@mui/private-theming/useTheme/useTheme.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../node_modules/@mui/material/styles/ThemeProvider.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactElement\":\"ContactListElement_contactElement__fdkob\",\"button\":\"ContactListElement_button__E8O7x\"};","import React from 'react';\nimport propTypes from 'prop-types';\nimport css from './ContactListElement.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/tasks/operations';\n\nconst ContactListElement = props => {\n  const dispatch = useDispatch();\n\n  const ContactDeleteHandler = () => {\n    dispatch(deleteContact(props.id));\n  };\n\n  return (\n    <li className={css.contactElement}>\n      <p>{props.name}</p>\n      <p>{props.number}</p>\n      <button\n        className={css.button}\n        type=\"button\"\n        onClick={ContactDeleteHandler}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListElement.propTypes = {\n  id: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n  number: propTypes.string.isRequired,\n};\n\nexport default ContactListElement;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactlist\":\"ContactList_contactlist__zx6vn\"};","export const selectContacts = state => state.contacts.contacts\nexport const selectContactsFilter = state => state.filter.filterQuery\nexport const selectIsLoading = state => state.contacts.isLoading\nexport const selectError = state => state.contacts.error\n\nexport const selectFilteredContacts = state => {\n  const contacts = selectContacts(state);\n  const filterQuery = selectContactsFilter(state);\n\n  return contacts.filter(\n    contact =>\n      filterQuery === '' ||\n      contact.name.toLowerCase().includes(filterQuery.toLowerCase())\n  );\n};\n","import React from 'react';\nimport ContactListElement from 'components/ContactListElement/ContactListElement';\nimport css from './ContactList.module.css';\nimport propTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/tasks/selectors';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <>\n    <ul className={css.contactlist}>\n      {filteredContacts.map(contact => (\n          <ContactListElement\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n          />\n        ))\n      }\n      </ul>\n      </>\n    ); \n};\n\nContactList.propTypes = {\n  list: propTypes.arrayOf(\n    propTypes.shape({\n      key: propTypes.string,\n      name: propTypes.string.isRequired,\n      number: propTypes.string.isRequired,\n      deleteContact: propTypes.func,\n    })\n  ),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactInput\":\"ContactForm_contactInput__z6XOX\",\"contactButton\":\"ContactForm_contactButton__jSKp4\"};","import css from './ContactForm.module.css';\nimport React, { useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/tasks/operations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n    const validateName = name => {\n    const pattern =\n      /^[a-zA-ZĄąĆćĘęŁłŃńÓóŚśŹźŻż]+(([' -][a-zA-ZĄąĆćĘęŁłŃńÓóŚśŹźŻż])?[a-zA-ZĄąĆćĘęŁłŃńÓóŚśŹźŻż]*)*$/;\n    return pattern.test(name);\n  };\n\n  const validateNumber = number => {\n    const apattern =\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n    return apattern.test(number);\n  };\n\n  const onNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const onPhoneChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    if (validateName(name) && validateNumber(number)) {\n      dispatch(\n        addContact({\n          name: form.elements.name.value,\n          number: form.elements.number.value\n        })\n      );\n    }\n\n    form.reset();\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">\n        Name\n      </label>\n      <input\n        className={css.contactInput}\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={onNameChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label htmlFor=\"number\">\n        Number\n      </label>\n      <input\n        className={css.contactInput}\n        id=\"number\"\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={onPhoneChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button className={css.contactButton} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setContactsFilter } from 'redux/tasks/filterSlice';\nimport { selectContactsFilter } from 'redux/tasks/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const filterChangeHandler = event => {\n    dispatch(setContactsFilter(event.target.value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <h3>Find contacts by name:</h3>\n      <input\n        className={css.filterInput}\n        id=\"filter\"\n        value={filter}\n        onChange={filterChangeHandler}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import * as React from 'react';\nimport ContactList from '../components/ContactList/ContactList';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logOut } from 'redux/auth/operations';\nimport { fetchContacts } from \"../redux/tasks/operations\";\nimport { selectError, selectIsLoading } from \"../redux/tasks/selectors\";\nimport { ThreeDots } from 'react-loader-spinner';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';  \nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport { useAuth } from 'hooks';\n\nconst theme = createTheme();\n\nexport const ContactsPage = () => {\n\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch])\n\n    const { user } = useAuth();\n\n    return (\n        <ThemeProvider theme={theme}>\n          <AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={0}\n        sx={{ borderBottom: (theme) => `1px solid ${theme.palette.divider}`, position: 'fixed' }}\n            >\n            <Toolbar sx={{ flexWrap: 'wrap' }}>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap sx={{ flexGrow: 1 }}>\n                    <a href=\"/goit-react-hw-08-phonebook\"><p>PhoneBook</p></a>\n                    </Typography>\n                    <p>{user.email}</p>\n                    <Button href=\"/goit-react-hw-08-phonebook\" variant=\"outlined\" sx={{ my: 1, mx: 1.5 }}\n                    onClick={() => dispatch(logOut())}>\n                        Logout\n                    </Button>\n            </Toolbar>\n          </AppBar>\n        <div\n            style={{ display: 'flex', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', paddingTop: '150px' }}>\n            <ContactForm />\n            <h2>Contacts</h2>\n            <Filter />\n            {isLoading && !error && <div>\n                <ThreeDots\n                    height=\"80\"\n                    width=\"80\"\n                    radius=\"9\"\n                    color=\"pink\"\n                    ariaLabel=\"three-dots-loading\"\n                    wrapperStyle={{}}\n                    wrapperClassName=\"\"\n                    visible={true}\n                />\n            </div>}\n             {error}\n            <ContactList />\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default ContactsPage;\n","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n      theme: themeInput\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const scopedTheme = themeInput[THEME_ID];\n  return /*#__PURE__*/_jsx(SystemThemeProvider, _extends({}, props, {\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;"],"names":["props","dispatch","useDispatch","className","css","name","number","type","onClick","deleteContact","id","selectContactsFilter","state","filter","filterQuery","selectIsLoading","contacts","isLoading","selectError","error","selectFilteredContacts","selectContacts","contact","toLowerCase","includes","filteredContacts","useSelector","map","useState","setName","setNumber","onSubmit","e","preventDefault","form","target","test","validateName","validateNumber","addContact","elements","value","reset","htmlFor","onChange","pattern","title","required","event","setContactsFilter","theme","createTheme","ContactsPage","useEffect","fetchContacts","user","useAuth","ThemeProvider","AppBar","position","color","elevation","sx","borderBottom","palette","divider","Toolbar","flexWrap","Typography","variant","noWrap","flexGrow","href","email","Button","my","mx","logOut","style","display","alignItems","flexDirection","paddingTop","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","React","useTheme","ThemeContext","Symbol","for","children","localTheme","outerTheme","output","_extends","mergeOuterLocalTheme","nested","_jsx","EMPTY_THEME","useThemeScoping","themeId","upperTheme","isPrivate","resolvedTheme","mergedTheme","result","useThemeWithoutDefault","upperPrivateTheme","usePrivateTheme","engineTheme","privateTheme","MuiThemeProvider","StyledEngineThemeContext","_excluded","_ref","themeInput","_objectWithoutPropertiesLoose","scopedTheme","THEME_ID","SystemThemeProvider","undefined"],"sourceRoot":""}